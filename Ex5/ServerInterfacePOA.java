
/**
* ServerInterfacePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from interface.idl
* sobota, 2 wrze≈õnia 2017 00:41:10 CEST
*/

public abstract class ServerInterfacePOA extends org.omg.PortableServer.Servant
 implements ServerInterfaceOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("setResources", new java.lang.Integer (0));
    _methods.put ("submit", new java.lang.Integer (1));
    _methods.put ("done", new java.lang.Integer (2));
    _methods.put ("cancel", new java.lang.Integer (3));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // ServerInterface/setResources
       {
         int cores = in.read_long ();
         this.setResources (cores);
         out = $rh.createReply();
         break;
       }

       case 1:  // ServerInterface/submit
       {
         String urls[] = stringsHelper.read (in);
         int tasks = in.read_long ();
         int parallelTasks = in.read_long ();
         org.omg.CORBA.IntHolder userID = new org.omg.CORBA.IntHolder ();
         this.submit (urls, tasks, parallelTasks, userID);
         out = $rh.createReply();
         out.write_long (userID.value);
         break;
       }

       case 2:  // ServerInterface/done
       {
         int taskID = in.read_long ();
         this.done (taskID);
         out = $rh.createReply();
         break;
       }

       case 3:  // ServerInterface/cancel
       {
         int userID = in.read_long ();
         this.cancel (userID);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ServerInterface:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public ServerInterface _this() 
  {
    return ServerInterfaceHelper.narrow(
    super._this_object());
  }

  public ServerInterface _this(org.omg.CORBA.ORB orb) 
  {
    return ServerInterfaceHelper.narrow(
    super._this_object(orb));
  }


} // class ServerInterfacePOA
